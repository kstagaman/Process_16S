#!/bin/bash -l
# 2_derep_cluster_ID_16S.job

### Queuing variables
# (The d flag is always the raw reads directory)
#PBS -N
#PBS -d
#PBS -q fatnodes

#PBS -k oe
#PBS -m ae
#PBS -M

### Use the script to dereplicate, cluster OTUs, and identitfy from 16S sequences.
### This script requires you to have run 1_assemble_filter_cat_16S.job on this same data

### To run job enter:
# qsub 2_derep_cluster_ID_16S.job

### Auxillary scripts and programs
# bowtie/2.2.1
# usearch/7.0.1090 -OR- uclust/1.2.22 -OR- vsearch/1.1.3
# mafft (v7.029b)
# fasttree/2.1.4
# RDPTools/140616
# bc/1.06.95
# uniq_16S.pl
# usearch7_relabel_otus.pl
# build_otu_table.pl
# join_multi-lined_fasta.pl
# rdp_tax2phyloseq_tax_nosupp.pl

###################### YOU CAN EDIT THE FOLLOWING VARIABLES ######################

### Which clustering tool would you like to use?
clusterTool=vsearch
cluster_dist=3
#
### Include singletons by matching them back to clusters formed without them ("yes" or "no")?
inclSngls=no
uniq_keep=2 # mininum number of identical sequences to keep unique read

### Do you want to run bowtie to remove host-matching sequences ("yes" or "no")?
runBowtie=no
bowtie_ver=2 # or 1
bowtie_db=/home2/stagaman/Databases/Bowtie2/d_rerio_Zv9_MT   # bowtie2 zebrafish MT
# bowtie_db=/home14/steury/research/bowtie_indexes/mtDNA_indexes/SB_mtDNA # bowtie2 stickleback mtDNA
# bowtie_db=/research/bowtie_indexes/d_rerio_ZV9_62   # bowtie version 1 zebrafish

bowtie_threads=1 # Using more than 1 thread causes bowtie to mess up the order of the unique sequences
                 # If you wish you use all threads available change to `grep -c "^processor" /proc/cpuinfo`
                 # If you do this, you need to add a line after the bowtie command to reorder sequences by abundance

### Alignment parameters
mafft_open=10  # these open and extend penalties are much higher than the default. I chose them because I've found that
mafft_extend=5 # if the resulting alignments are highly gapped, I probably did something wrong upstream, or the data is really bad.

### RDP Classifier version (which version would you like to use (14016 or 160201)?)
rdp_version=140616 # or 160201

##################################################################################
########### LEAVE THESE VARIABLES ALONE UNLESS SOMETHING'S NOT WORKING ###########
### Load Modules
if [ $runBowtie == "yes" ]; then
	module load bowtie/2.2.9
fi
if [ $clusterTool == 'usearch' ]; then
	module load usearch/7.0.1090          # usearch/8.0 won't work with data > 4Gb because we only have the 32-bit version
elif [ $clusterTool == 'uclust' ]; then
	module load uclust/1.2.22
elif [ $clusterTool == 'vsearch' ]; then
	module load vsearch/1.1.3
else
	exit
fi
module load fasttree/2.1.4
module load RDPTools/140616

### Environment variables
rawDir=`pwd`
scriptsDir=`find $HOME -path "*/Process_16S/Support_scripts" | head -1`
if [ ! -d "$scriptsDir/kstagaman_bin" ]; then
	ln -s /home2/stagaman/bin $scriptsDir/kstagaman_bin
fi
today=(`date`)
runName=`echo "process_16S_${today[2]}${today[1]}${today[5]}"`
echo "rawDir=$rawDir" >> $rawDir/$runName.log
echo "scriptsDir=$scriptsDir" >> $rawDir/$runName.log
echo "clusterTool=$clusterTool" >> $rawDir/$runName.log
echo "inclSngls=$inclSngls" >> $rawDir/$runName.log
concatName=all_smpls.joined.filt
uniq_outDir=03_UniqSeq_files
echo "uniq_keep=$uniq_keep" >> $rawDir/$runName.log
gt=`expr $uniq_keep - 1` # for file naming purposes
pct_id=`printf "%.2f\n" $(bc <<< "scale = 2; (100 - $cluster_dist)/100")`
echo -e "cluster_dist=$cluster_dist\npct_id=$pct_id" >> $rawDir/$runName.log
if [ $clusterTool == 'usearch' ]; then
	cluster_outDir=04_Usearch_dist$cluster_dist
elif [ $clusterTool == 'uclust' ]; then
	cluster_outDir=04_Uclust_id${pct_id}
elif [ $clusterTool == 'vsearch' ]; then
	cluster_outDir=04_Vsearch_dist$cluster_dist
fi
final_outDir=00_Final_output
mafftDir=$scriptsDir/kstagaman_bin # if mafft is not being run on ACISS, this needs to point to the correct directory containing mafft
mafft_threads=`grep -c "^processor" /proc/cpuinfo`
echo -e "mafft_threads=$mafft_threads\nmafft_open=$mafft_open\nmafft_extend=$mafft_extend\n" >> $rawDir/$runName.log
fasttree_log=$rawDir/${runName}_fasttree.log

##################################################################################
######################### PROCESSING COMMANDS RUN BELOW ##########################

### Dereplicate unique reads (uniq_16S.pl) &
### Drop unique reads with abundance lower than $uniq_keep
cd $rawDir/$uniq_outDir
if [ $clusterTool == 'usearch' ] || [ $clusterTool == 'vsearch' ]; then
	if [ $inclSngls == 'yes' ]; then
		$scriptsDir/uniq_16S.pl -s -u -i $concatName.fasta -k $uniq_keep
		echo -e "$scriptsDir/uniq_16S.pl -s -u -i $concatName.fasta -k $uniq_keep\n" >> $rawDir/$runName.log
	else
		$scriptsDir/uniq_16S.pl -s -i $concatName.fasta -k $uniq_keep
		echo -e "$scriptsDir/uniq_16S.pl -s -i $concatName.fasta -k $uniq_keep\n" >> $rawDir/$runName.log
	fi
else
	if [ $inclSngls == 'yes' ]; then
		$scriptsDir/uniq_16S.pl -u -i $concatName.fasta -k $uniq_keep # difference is -s flag not present, which adds ;size= for usearch to headers
		echo -e "$scriptsDir/uniq_16S.pl -u -i $concatName.fasta -k $uniq_keep\n" >> $rawDir/$runName.log
	else
		$scriptsDir/uniq_16S.pl -i $concatName.fasta -k $uniq_keep # difference is -s flag not present, which adds ;size= for usearch to headers
		echo -e "$scriptsDir/uniq_16S.pl -i $concatName.fasta -k $uniq_keep\n" >> $rawDir/$runName.log
	fi
fi
overThreshName=`echo all_smpls*gt${gt}*.fasta | rev | cut -d '.' -f 2- | rev`
if [ $inclSngls == 'yes' ]; then
	underThreshName=`echo all_smpls*lte${gt}*.fasta | rev | cut -d '.' -f 2- | rev`
fi

### Drop seqs that align to host genome
seq_cts=(`grep -o "size=[0-9][0-9]*" $overThreshName.fasta | cut -f 2 -d '='`)
last=$((${#seq_cts[@]} - 1))
total_seqs=0; for i in `seq 0 $last`; do total_seqs=$(($total_seqs + ${seq_cts[$i]})); done
if [ $runBowtie == 'yes' ]; then
	if [ $bowtie_ver -eq 1 ]; then
		bowtie -f -p $bowtie_threads $bowtie_db $overThreshName.fasta --un $overThreshName.noHost.fasta
		echo -e "bowtie -f -p $bowtie_threads $bowtie_db $overThreshName.fasta --un $overThreshName.noHost.fasta\n" >> $rawDir/$runName.log
		deHostOverName=$overThreshName.noHost
		hostSeq_cts=(`grep -o "size=[0-9][0-9]*" $overThreshName.wHost.fasta | cut -f 2 -d '='`)
		last=$((${#hostSeq_cts[@]} - 1))
		total_host=0; for i in `seq 0 $last`; do total_host=$(($total_host + ${hostSeq_cts[$i]})); done
		frac_host=`bc <<< "scale=5; $total_host/$total_seqs"`
		echo -e "fraction of seqs over keep threshold that match host: $frac_host\n" >> $rawDir/$runName.log

		if [ $inclSngls == 'yes' ]; then
			bowtie -f -p $bowtie_threads $bowtie_db $underThreshName.fasta --un $underThreshName.noHost.fasta
			echo -e "bowtie -f -p $bowtie_threads $bowtie_db $underThreshName.fasta --un $underThreshName.noHost.fasta\n" >> $rawDir/$runName.log
			deHostUnderName=$underThreshName.noHost
			hostSeq_cts=(`grep -o "size=[0-9][0-9]*" $underThreshName.wHost.fasta | cut -f 2 -d '='`)
			last=$((${#hostSeq_cts[@]} - 1))
			total_host=0; for i in `seq 0 $last`; do total_host=$(($total_host + ${hostSeq_cts[$i]})); done
			frac_host=`bc <<< "scale=5; $total_host/$total_seqs"`
			echo -e "fraction of seqs under keep threshold that match host: $frac_host\n" >> $rawDir/$runName.log
		fi
	else
		bowtie2 -f -x $bowtie_db -U $overThreshName.fasta -S $overThreshName.sam --un $overThreshName.noHost.fasta --al $overThreshName.wHost.fasta -p $bowtie_threads
		echo -e "bowtie2 -f -x $bowtie_db -U $overThreshName.fasta -S $overThreshName.sam --un $overThreshName.noHost.fasta --al $overThreshName.wHost.fasta -p $bowtie_threads\n" >> $rawDir/$runName.log
		deHostOverName=$overThreshName.noHost
		hostSeq_cts=(`grep -o "size=[0-9][0-9]*" $overThreshName.wHost.fasta | cut -f 2 -d '='`)
		last=$((${#hostSeq_cts[@]} - 1))
		total_host=0; for i in `seq 0 $last`; do total_host=$(($total_host + ${hostSeq_cts[$i]})); done
		frac_host=`bc <<< "scale=5; $total_host/$total_seqs"`
		echo -e "fraction of seqs over keep threshold that match host: $frac_host\n" >> $rawDir/$runName.log

		if [ $inclSngls == 'yes' ]; then
			bowtie2 -f -x $bowtie_db -U $underThreshName.fasta -S $underThreshName.sam --un $underThreshName.noHost.fasta --al $underThreshName.wHost.fasta -p $bowtie_threads
			echo -e "bowtie2 -f -x $bowtie_db -U $underThreshName.fasta -S $underThreshName.sam --un $underThreshName.noHost.fasta --al $underThreshName.wHost.fasta -p $bowtie_threads" >> $rawDir/$runName.log
			deHostUnderName=$underThreshName.noHost
			hostSeq_cts=(`grep -o "size=[0-9][0-9]*" $underThreshName.wHost.fasta | cut -f 2 -d '='`)
			last=$((${#hostSeq_cts[@]} - 1))
			total_host=0; for i in `seq 0 $last`; do total_host=$(($total_host + ${hostSeq_cts[$i]})); done
			frac_host=`bc <<< "scale=5; $total_host/$total_seqs"`
			echo -e "fraction of seqs under keep threshold that match host: $frac_host\n" >> $rawDir/$runName.log
		fi
	fi
else
	deHostOverName=$overThreshName
	deHostUnderName=$underThreshName
fi

### Cluster OTUs (usearch)
cd $rawDir
mkdir $rawDir/$cluster_outDir

if [ $clusterTool == 'usearch' ]; then
	usearch \
	-cluster_otus $uniq_outDir/$deHostOverName.fasta \
	-otus $cluster_outDir/$deHostOverName.seeds.fasta \
	-uc $cluster_outDir/$deHostOverName.clustered.uc \
	-sizein -otu_radius_pct $cluster_dist
	echo -e "usearch -cluster_otus $uniq_outDir/$deHostOverName.fasta -otus $cluster_outDir/$deHostOverName.seeds.fasta -uc $cluster_outDir/$deHostOverName.clustered.uc -sizein -otu_radius_pct $cluster_dist\n" >> $rawDir/$runName.log

	if [ $inclSngls == 'yes' ]; then
		usearch \
		-usearch_global $uniq_outDir/$deHostUnderName.fasta \
		-db $cluster_outDir/$deHostOverName.seeds.fasta \
		-uc $cluster_outDir/$deHostUnderName.clustered.uc \
		-sizein -strand plus -id $pct_id
		echo -e "usearch -usearch_global $uniq_outDir/$deHostUnderName.fasta -db $cluster_outDir/$deHostOverName.seeds.fasta -uc $cluster_outDir/$deHostUnderName.clustered.uc -sizein -strand plus -id $pct_id\n" >> $rawDir/$runName.log
	fi
elif [ $clusterTool == 'uclust' ]; then
	uclust \
	--input $uniq_outDir/$deHostOverName.fasta \
	--uc $cluster_outDir/$deHostOverName.clustered.uc \
	--usersort --trunclabels --id $pct_id
	echo -e "uclust --input $cluster_outDir/$deHostOverName.fasta --uc $cluster_outDir/$deHostOverName.clustered.uc --usersort --trunclabels --id $pct_id\n" >> $rawDir/$runName.log

	uclust \
	--uc2fasta $cluster_outDir/$deHostOverName.clustered.uc \
	--input $uniq_outDir/$deHostOverName.fasta \
	--output $cluster_outDir/$deHostOverName.seeds.fasta \
	--types S --trunclabels
	echo -e "uclust --uc2fasta $cluster_outDir/$deHostOverName.clustered.uc --types S --input $uniq_outDir/$deHostOverName.fasta --output $cluster_outDir/$deHostOverName.seeds.fasta --trunclabels\n" >> $rawDir/$runName.log

	if [ $inclSngls == 'yes' ]; then
		uclust \
		--input $uniq_outDir/$deHostUnderName.fasta \
		--lib $cluster_outDir/$deHostOverName.seeds.fasta \
		--uc $cluster_outDir/$deHostUnderName.clustered.uc \
		--libonly --usersort --trunclabels --id $pct_id
		echo -e "uclust --input $uniq_outDir/$deHostUnderName.fasta --lib $cluster_outDir/$deHostOverName.seeds.fasta --uc $cluster_outDir/$deHostUnderName.clustered.uc --usersort --trunclabels --id $pct_id\n" >> $rawDir/$runName.log
	fi
elif [ $clusterTool == 'vsearch' ]; then
	echo -e "using vsearch to cluster...\n" >> $rawDir/$runName.log
	vsearch \
	-cluster_fast $uniq_outDir/$deHostOverName.fasta \
	-centroids $cluster_outDir/$deHostOverName.seeds.fasta \
	-uc $cluster_outDir/$deHostOverName.clustered.uc \
	-sizein -id $pct_id
	echo -e "vsearch -cluster_fast $uniq_outDir/$deHostOverName.fasta -centroids $cluster_outDir/$deHostOverName.seeds.fasta -uc $cluster_outDir/$deHostOverName.clustered.up -sizein \n" >> $rawDir/$runName.log

	if [ $inclSngls == 'yes' ]; then
		vsearch \
		-usearch_global $uniq_outDir/$deHostUnderName.fasta \
		-db $cluster_outDir/$deHostOverName.seeds.fasta \
		-uc $cluster_outDir/$deHostUnderName.clustered.uc \
		-sizein -strand plus -id $pct_id
		echo -e "usearch -usearch_global $uniq_outDir/$deHostUnderName.fasta -db $cluster_outDir/$deHostOverName.seeds.fasta -uc $cluster_outDir/$deHostUnderName.clustered.uc -sizein -strand plus -id $pct_id\n" >> $rawDir/$runName.log
	fi
fi

### Cleanup
comboName=$concatName.uniq.allSize.noHost
grep "^[SH]" $cluster_outDir/$deHostOverName.clustered.uc > $cluster_outDir/$comboName.clustered.uc
cat $uniq_outDir/$concatName.uniq_gt${gt}_map.txt > $uniq_outDir/$concatName.uniq_allSize_map.txt

if [ $inclSngls == 'yes' ]; then
	grep "^[SH]" $cluster_outDir/$deHostUnderName.clustered.uc >> $cluster_outDir/$comboName.clustered.uc
	cat $uniq_outDir/$concatName.uniq_lte${gt}_map.txt >> $uniq_outDir/$concatName.uniq_allSize_map.txt
fi

if [ $clusterTool == 'usearch' ] || [ $clusterTool == 'vsearch' ]; then
	$scriptsDir/join_multi-lined_fasta.pl $cluster_outDir/$deHostOverName.seeds.fasta
	mv $cluster_outDir/$deHostOverName.seeds.fasta.joined $cluster_outDir/$deHostOverName.seeds.fasta
	$scriptsDir/usearch7_relabel_otus.pl -i $cluster_outDir/$deHostOverName.seeds.fasta
	mv $cluster_outDir/$deHostOverName.seeds.relabelled.fasta $cluster_outDir/$deHostOverName.seeds.fasta
else
	sed "s/^>\([0-9][0-9]*\).*/>OTU\1/g" $cluster_outDir/$deHostOverName.seeds.fasta > $cluster_outDir/$deHostOverName.seeds.fasta.edited
	mv $cluster_outDir/$deHostOverName.seeds.fasta.edited $cluster_outDir/$deHostOverName.seeds.fasta
fi

### Build OTU table
mkdir $rawDir/$final_outDir
$scriptsDir/build_otu_table.pl -f uclust -o $final_outDir -i $cluster_outDir/$comboName.clustered.uc -m $uniq_outDir/$concatName.uniq_allSize_map.txt
echo -e "$scriptsDir/build_otu_table.pl -f uclust -o $final_outDir -i $cluster_outDir/$comboName.clustered.uc -m $uniq_outDir/$concatName.uniq_allSize_map.txt\n" >> $rawDir/$runName.log
mv $final_outDir/$comboName.clustered.otu_tbl.txt $final_outDir/all_smpls.otu_tbl.txt

### Alignment (mafft)
cd $rawDir/$cluster_outDir
$mafftDir/mafft --auto --op $mafft_open --ep $mafft_extend --thread $mafft_threads $deHostOverName.seeds.fasta > $rawDir/$final_outDir/all_smpls.otu_seqs.aln.fasta
echo -e "$mafftDir/mafft --auto --op $mafft_open --ep $mafft_extend --thread $mafft_threads $deHostOverName.seeds.fasta > $rawDir/$final_outDir/all_smpls.otu_seqs.aln.fasta\n" >> $rawDir/$runName.log

### Cleanup
cd $rawDir/$final_outDir
$scriptsDir/join_multi-lined_fasta.pl all_smpls.otu_seqs.aln.fasta
mv all_smpls.otu_seqs.aln.fasta.joined all_smpls.otu_seqs.aln.fasta

### Build tree (FastTree)
FastTree -nt -nosupport -quote -gtr -gamma -log $fasttree_log all_smpls.otu_seqs.aln.fasta > all_smpls.otus.tree
echo -e "FastTree -nt -nosupport -quote -gtr -gamma -log $fasttree_log all_smpls.otu_seqs.aln.fasta > all_smpls.otus.tree\n" >> $rawDir/$runName.log

### Taxon assignment (RDP classifier)
# note if not running on ACISS you may need to replace the path to classifier.jar
java -Xmx1g -jar /usr/local/packages/RDPTools/$rdp_version/classifier.jar classify all_smpls.otu_seqs.aln.fasta -o all_smpls.taxa_tbl.rdp$rdp_version.txt
echo -e "java -Xmx1g -jar /usr/local/packages/RDPTools/classifier.jar classify all_smpls.otu_seqs.aln.fasta -o all_smpls.taxa_tbl.rdp$rdp_version.txt\n" >> $rawDir/$runName.log

$scriptsDir/rdp_tax2phyloseq_tax_nosupp.pl -i all_smpls.taxa_tbl.rdp$rdp_version.txt

cd $rawDir
