#!/bin/bash -l
# 5_drop_host_seqs.job

### Queuing variables
# (The d flag is always the raw reads directory)
#PBS -N 
#PBS -d 
#PBS -q fatnodes

#PBS -k oe
#PBS -m ae
#PBS -M 

### Use the script to remove host-matching 16S sequences 
### This script is optional within the pipeline, 
### but make sure to set `runBowtie=no` in next script if 
### you skip this one

### To run job enter:
# qsub 5_drop_host_seqs.job (Run anywhere)
#		-OR-
# PATH/TO/Process_16S/Modular_scripts/5_drop_host_seqs.job (Run within raw reads directory)

### Auxillary scripts and programs
# bowtie/2.2.1

###### Include singletons by matching them back to clusters formed without them ("yes" or "no")? ######
inclSngls=no # make sure this answer matches answer in 4_dereplicate.job

rawDir=`pwd`
# scriptsDir=`find $HOME -path "*/Process_16S/Support_scripts"`
today=(`date`)
runName=`echo "process_16S_${today[2]}${today[1]}${today[5]}"`

### Load Modules 
module load bowtie/2.2.1


uniq_outDir=03_UniqSeq_files

### Dropping host seqs variables (bowtie)
bowtie_db=/research/bowtie_indexes/d_rerio_ZV9_62   # zebrafish
# bowtie_db=/research/bowtie_indexes/h_sapiens_37_asm # human

bowtie_threads=1 # Using more than 1 thread causes bowtie to mess up the order of the unique sequences
                 # If you wish you use all threads available change to `grep -c "^processor" /proc/cpuinfo`
                 # If you do this, you need to add a line after the bowtie command to reorder sequences by abundance

##################################################################################

cd $rawDir/$uniq_outDir

overThreshName=`echo *gt*.fasta | rev | cut -d '.' -f 2- | rev`
if [ $inclSngls == 'yes' ]; then 
	underThreshName=`echo *lte*.fasta | rev | cut -d '.' -f 2- | rev`
fi

### Drop seqs that align to host genome
bowtie -f -p $bowtie_threads $bowtie_db $overThreshName.fasta --un $overThreshName.noHost.fasta
echo -e "bowtie -f -p $bowtie_threads $bowtie_db $overThreshName.fasta --un $overThreshName.noHost.fasta\n" >> $rawDir/$runName.log
deHostOverName=$overThreshName.noHost

if [ $inclSngls == 'yes' ]; then 
	bowtie -f -p $bowtie_threads $bowtie_db $underThreshName.fasta --un $underThreshName.noHost.fasta
	echo -e "bowtie -f -p $bowtie_threads $bowtie_db $underThreshName.fasta --un $underThreshName.noHost.fasta\n" >> $rawDir/$runName.log
	deHostUnderName=$underThreshName.noHost
fi

cd $rawDir
