#!/bin/bash -l
# 6_cluster_otus.job

### Queuing variables
# (The d flag is always the raw reads directory)
#PBS -N 
#PBS -d 
#PBS -q fatnodes

#PBS -k oe
#PBS -m ae
#PBS -M 

### Use the script to cluster OTUs from 16S sequences.

### To run job enter:
# qsub 6_cluster_otus.job (Run anywhere)
#		-OR-
# PATH/TO/Process_16S/Modular_scripts/6_cluster_otus.job (Run within raw reads directory)

### Auxillary scripts and programs
# usearch/7.0.1090 -OR- uclust/1.2.22
# usearch7_relabel_otus.pl

############ MAKE SURE ANSWERS BELOW ARE THE SAME AS IN PREVIOUS SCRIPTS ############
###### Which clustering tool would you like to use? ######
clusterTool=usearch

###### Include singletons by matching them back to clusters formed without them ("yes" or "no")? ######
inclSngls=no

###### Did you run 5_drop_host_seqs.job ("yes" or "no")? ######
runBowtie=yes

rawDir=`pwd`
scriptsDir=`find $HOME -path "*/Process_16S/Support_scripts"`
today=(`date`)
runName=`echo "process_16S_${today[2]}${today[1]}${today[5]}"`

### Load Modules
if [ $clusterTool == 'usearch' ]; then 
	module load usearch/7.0.1090          # usearch/8.0 won't work with data > 4Gb because we only have the 32-bit version
elif [ $clusterTool == 'uclust' ]; then 
	module load uclust/1.2.22
else 
	exit
fi

### Directories and names
concatName=all_smpls.joined.filt
uniq_outDir=03_UniqSeq_files

### Clustering variables
cluster_dist=3
pct_id=`printf "%.2f\n" $(bc <<< "scale = 2; (100 - $cluster_dist)/100")`
echo -e "cluster_dist=$cluster_dist\npct_id=$pct_id" >> $rawDir/$runName.log

if [ $clusterTool == 'usearch' ]; then 
	cluster_outDir=04_Usearch_dist$cluster_dist
else 
	cluster_outDir=04_Uclust_id${pct_id}
fi

##################################################################################

cd $rawDir/$uniq_outDir

overThreshName=`echo *gt*hdrs.fasta | rev | cut -d '.' -f 2- | rev`
if [ $inclSngls == 'yes' ]; then 
	underThreshName=`echo *lte*hdrs.fasta | rev | cut -d '.' -f 2- | rev`
fi

### Drop seqs that align to host genome
if [ $runBowtie == 'yes' ]; then 
	deHostOverName=$overThreshName.noHost

	if [ $inclSngls == 'yes' ]; then 
		deHostUnderName=$underThreshName.noHost
	fi
else 
	deHostOverName=$overThreshName
	deHostUnderName=$underThreshName
fi

### Cluster OTUs (usearch)
cd $rawDir
mkdir $rawDir/$cluster_outDir

if [ $clusterTool == 'usearch' ]; then 
	usearch \
	-cluster_otus $uniq_outDir/$deHostOverName.fasta \
	-otus $cluster_outDir/$deHostOverName.seeds.fasta \
	-uc $cluster_outDir/$deHostOverName.clustered.uc \
	-sizein -otu_radius_pct $cluster_dist
	echo -e "usearch -cluster_otus $uniq_outDir/$deHostOverName.fasta -otus $cluster_outDir/$deHostOverName.seeds.fasta -uparseout $cluster_outDir/$deHostOverName.clustered.up -sizein -relabel OTU\n" >> $rawDir/$runName.log

	if [ $inclSngls == 'yes' ]; then 
		usearch \
		-usearch_global $uniq_outDir/$deHostUnderName.fasta \
		-db $cluster_outDir/$deHostOverName.seeds.fasta \
		-uc $cluster_outDir/$deHostUnderName.clustered.uc \
		-sizein -strand plus -id $pct_id
		echo -e "usearch -usearch_global $uniq_outDir/$deHostUnderName.fasta -db $cluster_outDir/$deHostOverName.seeds.fasta -uc $cluster_outDir/$deHostUnderName.clustered.uc -sizein -strand plus -id $pct_id\n" >> $rawDir/$runName.log
	fi
else 
	uclust \
	--input $uniq_outDir/$deHostOverName.fasta \
	--uc $cluster_outDir/$deHostOverName.clustered.uc \
	--usersort --trunclabels --id $pct_id 
	echo -e "uclust --input $cluster_outDir/$deHostOverName.fasta --uc $cluster_outDir/$deHostOverName.clustered.uc --usersort --trunclabels --id $pct_id\n" >> $rawDir/$runName.log

	uclust \
	--uc2fasta $cluster_outDir/$deHostOverName.clustered.uc \
	--input $uniq_outDir/$deHostOverName.fasta \
	--output $cluster_outDir/$deHostOverName.seeds.fasta \
	--types S --trunclabels
	echo -e "uclust --uc2fasta $cluster_outDir/$deHostOverName.clustered.uc --types S --input $uniq_outDir/$deHostOverName.fasta --output $cluster_outDir/$deHostOverName.seeds.fasta --trunclabels\n" >> $rawDir/$runName.log

	if [ $inclSngls == 'yes' ]; then 
		uclust \
		--input $uniq_outDir/$deHostUnderName.fasta \
		--lib $cluster_outDir/$deHostOverName.seeds.fasta \
		--uc $cluster_outDir/$deHostUnderName.clustered.uc \
		--libonly --usersort --trunclabels --id $pct_id
		echo -e "uclust --input $uniq_outDir/$deHostUnderName.fasta --lib $cluster_outDir/$deHostOverName.seeds.fasta --uc $cluster_outDir/$deHostUnderName.clustered.uc --usersort --trunclabels --id $pct_id\n" >> $rawDir/$runName.log
	fi
fi

### Cleanup
comboName=$concatName.uniq.allSize.noHost
grep "^[SH]" $cluster_outDir/$deHostOverName.clustered.uc > $cluster_outDir/$comboName.clustered.uc
cat $uniq_outDir/$concatName.uniq_gt${gt}_map.txt > $uniq_outDir/$concatName.uniq_allSize_map.txt

if [ $inclSngls == 'yes' ]; then 
	grep "^[SH]" $cluster_outDir/$deHostUnderName.clustered.uc >> $cluster_outDir/$comboName.clustered.uc
	cat $uniq_outDir/$concatName.uniq_lte${gt}_map.txt >> $uniq_outDir/$concatName.uniq_allSize_map.txt
fi

if [ $clusterTool == 'usearch' ]; then 
	$scriptsDir/join_multi-lined_fasta.pl $cluster_outDir/$deHostOverName.seeds.fasta
	mv $cluster_outDir/$deHostOverName.seeds.fasta.joined $cluster_outDir/$deHostOverName.seeds.fasta
	$scriptsDir/usearch7_relabel_otus.pl -i $cluster_outDir/$deHostOverName.seeds.fasta
	mv $cluster_outDir/$deHostOverName.seeds.relabelled.fasta $cluster_outDir/$deHostOverName.seeds.fasta
else 
	sed "s/^>\([0-9][0-9]*\).*/>OTU\1/g" $cluster_outDir/$deHostOverName.seeds.fasta > $cluster_outDir/$deHostOverName.seeds.fasta.edited
	mv $cluster_outDir/$deHostOverName.seeds.fasta.edited $cluster_outDir/$deHostOverName.seeds.fasta
fi

cd $rawDir
