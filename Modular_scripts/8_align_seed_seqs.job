#!/bin/bash -l
# 8_align_seed_seqs.job

### Queuing variables
# (The d flag is always the raw reads directory)
#PBS -N 
#PBS -d 
#PBS -q fatnodes

#PBS -k oe
#PBS -m ae
#PBS -M 

### Use the script to align seed sequences for clustered OTUs.

### To run job enter:
# qsub 8_align_seed_seqs.job (Run anywhere)
#		-OR-
# PATH/TO/Process_16S/Modular_scripts/8_align_seed_seqs.job (Run within raw reads directory)

### Auxillary scripts and programs
# mafft (v7.029b)
# join_multi-lined_fasta.pl

### Environment variables ###
rawDir=`pwd`
scriptsDir=`find $HOME -path "*/Process_16S/Support_scripts"`
today=(`date`)
runName=`echo "process_16S_${today[2]}${today[1]}${today[5]}"`

# Directories
cluster_outDir=`echo 04_*`
final_outDir=00_Final_output


### Mafft variables
mafftDir=$scriptsDir/kstagaman_bin # if mafft is not being run on ACISS, this needs to point to the correct directory containing mafft
mafft_threads=`grep -c "^processor" /proc/cpuinfo`
mafft_open=10  # these open and extend penalties are much higher than the default. I chose them because I've found that 
mafft_extend=5 # if the resulting alignments are highly gapped, I probably did something wrong upstream, or the data is really bad.
echo -e "mafft_threads=$mafft_threads\nmafft_open=$mafft_open\nmafft_extend=$mafft_extend\n" >> $rawDir/$runName.log

##################################################################################

### Alignment (mafft)
cd $rawDir/$cluster_outDir
seedsFile=`echo *seeds.fasta`
$mafftDir/mafft --auto --op $mafft_open --ep $mafft_extend --thread $mafft_threads $seedsFile > $rawDir/$final_outDir/all_smpls.otu_seqs.aln.fasta
echo -e "$mafftDir/mafft --auto --op $mafft_open --ep $mafft_extend --thread $mafft_threads $seedsFile > $rawDir/$final_outDir/all_smpls.otu_seqs.aln.fasta\n" >> $rawDir/$runName.log

### Cleanup
cd $rawDir/$final_outDir
$scriptsDir/join_multi-lined_fasta.pl all_smpls.otu_seqs.aln.fasta
mv all_smpls.otu_seqs.aln.fasta.joined all_smpls.otu_seqs.aln.fasta

cd $rawDir
